-- renamed to employee due to another name having the same name.
CREATE TABLE EMPLOYEES(
    EMPLOYEE_ID NUMBER NOT NULL, 
    EMP_FIRSTNAME VARCHAR2(160) NOT NULL, 
    EMP_LASTNAME VARCHAR2(160) NOT NULL, 
    DEPARTMENT_ID NUMBER NOT NULL, 
    SALARY NUMBER, 
    EMP_EMAIL VARCHAR2(160),
    CONSTRAINT PK_Employees PRIMARY KEY  (EMPLOYEE_ID)
);

CREATE TABLE DEPARTMENT(
    DEPARTMENT_ID NUMBER NOT NULL,
    DEPARTMENT_NAME VARCHAR(160) NOT NULL,
    CONSTRAINT PK_Departments PRIMARY KEY  (DEPARTMENT_ID)
);

ALTER TABLE Employees ADD CONSTRAINT FK_EMPLOYEE_DEPARTMENT_ID
    FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT (DEPARTMENT_ID);
    
    
    
CREATE SEQUENCE employee_seq1 START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER before_insert_employees
BEFORE INSERT ON EMPLOYEES
FOR EACH ROW
BEGIN
    SELECT employee_seq1.nextVal INTO :new.EMPLOYEE_ID FROM DUAL;
END;
/


    
CREATE SEQUENCE department_seq1 START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER before_insert_department
BEFORE INSERT ON DEPARTMENT
FOR EACH ROW
BEGIN
    SELECT department_seq1.nextVal INTO :new.DEPARTMENT_ID FROM DUAL;
END;
/


INSERT INTO DEPARTMENT(DEPARTMENT_NAME) VALUES('IT');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME) VALUES('Art');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME) VALUES('Accounting');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME) VALUES('ER');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME) VALUES('ICU');
    
INSERT INTO EMPLOYEES(EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID, SALARY, EMP_EMAIL)
    VALUES('Eric', 'Carpizo', 1, 500.00, 'ec@gmail.com');
    
INSERT INTO EMPLOYEES(EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID, SALARY, EMP_EMAIL)
    VALUES('Paul', 'Carpizo', 2, 500.00, 'pc@gmail.com');
    
INSERT INTO EMPLOYEES(EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID, SALARY, EMP_EMAIL)
    VALUES('John', 'Carpizo',2, 500.00, 'jc@gmail.com');

INSERT INTO EMPLOYEES(EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID, SALARY, EMP_EMAIL)
    VALUES('Katrina', 'Carpizo', 3, 500.00, 'kc@gmail.com');
    
INSERT INTO EMPLOYEES(EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID, SALARY, EMP_EMAIL)
    VALUES('L', 'Carpizo', 5, 500.00, 'lc@gmail.com');
    
INSERT INTO EMPLOYEES(EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID, SALARY, EMP_EMAIL)
    VALUES('R', 'Carpizo', 5, 500.00, 'rc@gmail.com');
    
    
CREATE OR REPLACE PROCEDURE SP_GIVE_RAISE(d_id IN NUMBER, n_average OUT NUMBER, valid OUT BOOLEAN)
IS
    CURSOR c_employee IS (SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE DEPARTMENT_ID=d_id);
    isValid BOOLEAN:= FALSE;
    searchId NUMBER;
BEGIN
    SELECT DEPARTMENT_ID INTO searchId FROM DEPARTMENT WHERE DEPARTMENT_ID=d_id;
    IF searchId IS NOT NULL THEN
        FOR i IN c_employee LOOP
             UPDATE EMPLOYEES SET SALARY=SALARY*.10 WHERE EMPLOYEE_ID=i.EMPLOYEE_ID;
        END LOOP;
        SELECT AVG(SALARY) INTO n_average FROM EMPLOYEES WHERE DEPARTMENT_ID=d_id;
        isValid:=TRUE;
        valid:=isValid;
        COMMIT;
    ELSE
        valid:=isValid;
    END IF;
END;
/
