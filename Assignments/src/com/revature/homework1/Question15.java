package com.revature.homework1;

/**
 * Homework 1. Question 15. Math interface.
 * 
 * @author Ahmed Awwad
 *
 */
public class Question15 {
	
	/**
	 * Pseudo-test function. Tests MathWizard class.
	 * 
	 * @return No return value
	 */
	private static void runTests() {
		MathWizard m = new MathWizard();
		
		// Using simple, whole numbers to avoid floating issues
		System.out.println("Testing addition...");
		assert m.add(1, 1) == 2.0;
		System.out.println("Success!");
		
		System.out.println("Testing subtraction...");
		assert m.subtract(4, 2) == 2.0;
		System.out.println("Success!");
		
		System.out.println("Testing multiplication...");
		assert m.multiply(4, 6) == 24.0;
		// Testing if zero is generated by multiplying by zero
		assert m.multiply(573457456.945792, 0) == 0.0;
		System.out.println("Success!");
		
		System.out.println("Testing ordinary division...");
		assert m.divide(2, 4) == 0.5;
		assert m.divide(10, 2) == 5.0;
		System.out.println("Success!");
		
		System.out.println("Testing division by zero...");
		try {
			m.divide(1, 0);
			System.out.println("Fail!");
		} catch(IllegalArgumentException i) {
			// Our test is successful if an IllegalArgumentException was thrown
			System.out.println("Success!");
			System.out.println("All tests successful!");
		}
	}
	
	/**
	 * @param args A string array containing command line arguments.
	 * @return No return value
	 */
	public static void main(String[] args) {
		
		runTests();
		
	}
	
}

/**
 * Class for basic math operations
 * 
 * @author Ahmed Awwad
 *
 */
class MathWizard implements Mathable {

	/**
	 * Adds two numbers
	 * 
	 * @param a first number
	 * @param b second number
	 * @return Result of addition
	 */
	@Override
	public double add(double a, double b) {
		return a + b;
	}
	
	/**
	 * Subtracts two numbers
	 * 
	 * @param a first number
	 * @param b second number
	 * @return Result of Subtraction
	 */
	@Override
	public double subtract(double a, double b) {
		return a - b;
	}
	
	/**
	 * Multiplies two numbers
	 * 
	 * @param a first number
	 * @param b second number
	 * @return Result of multiplication
	 */
	@Override
	public double multiply(double a, double b) {
		return a * b;
	}
	
	/**
	 * Divides two numbers. The denominator must not be 0.
	 * 
	 * @param a Numerator
	 * @param b Denominator
	 * @throws IllegalArgumentException if denominator is 0
	 * @return Result of division
	 */
	@Override
	public double divide(double a, double b) {
		if (b == 0.0) {
			throw new IllegalArgumentException();
		}
		// So client does not have to run into problems with NaN and Infinity
		
		return a / b;
	}
	
}
