CREATE TABLE EMPLOYEE (
    EMPLOYEE_ID NUMBER,
    EMP_FIRSTNAME VARCHAR2(120) NOT NULL,
    EMP_LASTNAME VARCHAR2(120) NOT NULL,
    SALARY NUMBER,
    EMP_EMAIL VARCHAR2(120),
    DEPARTMENT_ID NUMBER,
    CONSTRAINT PK_EMPLOYEE PRIMARY KEY (EMPLOYEE_ID)
);

CREATE TABLE DEPARTMENT (
    DEPARTMENT_ID NUMBER,
    DEPARTMENT_NAME VARCHAR(120),
    CONSTRAINT PK_DEPARTMENT PRIMARY KEY (DEPARTMENT_ID)
);

ALTER TABLE EMPLOYEE ADD CONSTRAINT FK_DEPARTMENTID
    FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT(DEPARTMENT_ID) ON DELETE CASCADE;

   
CREATE SEQUENCE EMPLOYEE_ID_SEQ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE DEPARTMENT_ID_SEQ START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER BEFOREADDINGEMP 
    BEFORE INSERT ON EMPLOYEE
    FOR EACH ROW
BEGIN
    SELECT EMPLOYEE_ID_SEQ.NEXTVAL
    INTO :NEW.ID
    FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER BEFOREADDINGDEPARTMENT 
    BEFORE INSERT ON DEPARTMENT
    FOR EACH ROW
BEGIN
    SELECT DEPARTMENT_ID_SEQ.NEXTVAL
    INTO :NEW.DEPARTMENT_ID
    FROM DUAL;
END;
/

INSERT INTO DEPARTMENT(DEPARTMENT_NAME) VALUES('QUALITY CONTROL');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME) VALUES('IT');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME) VALUES('MARKETING');

INSERT INTO EMPLOYEE(EMP_FIRSTNAME, EMP_LASTNAME, SALARY, EMP_EMAIL, DEPARTMENT_ID) VALUES ('JOHN', 'SMITH', 70000, 'JOHNSMITH@REVATURE.COM', 3);
INSERT INTO EMPLOYEE(EMP_FIRSTNAME, EMP_LASTNAME, SALARY, EMP_EMAIL, DEPARTMENT_ID) VALUES ('JANE', 'SMITH', 70000, 'JANESMITH@REVATURE.COM', 1);
INSERT INTO EMPLOYEE(EMP_FIRSTNAME, EMP_LASTNAME, SALARY, EMP_EMAIL, DEPARTMENT_ID) VALUES ('JOHN', 'DOE', 70000, 'JOHNDIE@REVATURE.COM', 2);
INSERT INTO EMPLOYEE(EMP_FIRSTNAME, EMP_LASTNAME, SALARY, EMP_EMAIL, DEPARTMENT_ID) VALUES ('MICHAEL', 'DOE', 70000, 'MICHAELDOE@REVATURE.COM', 3);
INSERT INTO EMPLOYEE(EMP_FIRSTNAME, EMP_LASTNAME, SALARY, EMP_EMAIL, DEPARTMENT_ID) VALUES ('JULIA', 'CHEN', 70000, 'JULIACHEN@REVATURE.COM', 1);
INSERT INTO EMPLOYEE(EMP_FIRSTNAME, EMP_LASTNAME, SALARY, EMP_EMAIL, DEPARTMENT_ID) VALUES ('JAKE', 'KIM', 70000, 'JAKEKIM@REVATURE.COM', 2);

create or replace PROCEDURE SP_GIVE_RAISE(DEPART_ID NUMBER) AS
check_ID NUMBER;
BEGIN
    FOR EMP_ROW IN (
        SELECT * FROM EMPLOYEE WHERE EMPLOYEE.DEPARTMENT_ID = CHECK_ID
        )
    LOOP
        UPDATE EMPLOYEE SET SALARY = SALARY * 1.1 WHERE EMPLOYEE.DEPARTMENT_ID = CHECK_ID;
    END LOOP;

END;
/

--Testing out procedure
EXECUTE SP_GIVE_RAISE(3);

SELECT * FROM EMPLOYEE;
