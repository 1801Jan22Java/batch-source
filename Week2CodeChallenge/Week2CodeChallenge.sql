--Create a database with two tables:
--EMPLOYEE
--Columns: EMPLOYEE_ID, EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID,
--SALARY, EMP_EMAIL

CREATE TABLE EMPLOYEE(
EMPLOYEE_ID INT,
EMP_FIRSTNAME VARCHAR(255),
EMP_LASTNAME VARCHAR(255),
DEPARTMENT_ID INT,
SALARY INT,
EMP_EMAIL VARCHAR(255),
PRIMARY KEY (EMPLOYEE_ID)
);

--DEPARTMENT:
--Columns: DEPARTMENT_ID, DEPARTMENT_NAME

CREATE TABLE DEPARTMENT(
DEPARTMENT_ID INT,
DEPARTMENT_NAME VARCHAR(255),
PRIMARY KEY (DEPARTMENT_ID)
);

ALTER TABLE EMPLOYEE ADD CONSTRAINT FK_DEPARTMENTID
    FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT(DEPARTMENT_ID);
    
CREATE SEQUENCE EMPLOYEE_SEQUENCE
MINVALUE 0
START WITH 1000
INCREMENT BY 1;

CREATE SEQUENCE DEPARTMENT_SEQUENCE
MINVALUE 0
START WITH 1000
INCREMENT BY 1;

CREATE OR REPLACE TRIGGER AFTER_NEW_EMPLOYEE
    BEFORE INSERT ON EMPLOYEE
    FOR EACH ROW
    BEGIN
        IF :new.EMPLOYEE_ID IS NULL THEN
            SELECT EMPLOYEE_SEQUENCE.NEXTVAL INTO :new.EMPLOYEE_ID FROM DUAL;
        END IF;
    END;
/

CREATE OR REPLACE TRIGGER AFTER_NEW_DEPARTMENT
    BEFORE INSERT ON DEPARTMENT
    FOR EACH ROW
    BEGIN
        IF :new.DEPARTMENT_ID IS NULL THEN
            SELECT DEPARTMENT_SEQUENCE.NEXTVAL INTO :new.DEPARTMENT_ID FROM DUAL;
        END IF;
    END;
/

INSERT INTO DEPARTMENT VALUES(NULL, 'Water');
INSERT INTO DEPARTMENT VALUES(NULL, 'Highway');
INSERT INTO DEPARTMENT VALUES(NULL, 'Forestry');

INSERT INTO EMPLOYEE VALUES(NULL, 'Ricky', 'Bobby', 1002, 40000, 'ForestyDude@gmail.com');
INSERT INTO EMPLOYEE VALUES(NULL, 'Bernie', 'Smith', 1002, 40001, 'TreesRLyfe@gmail.com');
INSERT INTO EMPLOYEE VALUES(NULL, 'Angry', 'Steve', 1000, 25000, 'waterDep@gmail.com');
INSERT INTO EMPLOYEE VALUES(NULL, 'Todd', 'Stone', 1001, 50000, 'highway@gmail.com');
INSERT INTO EMPLOYEE VALUES(NULL, 'Jack', 'Box', 1001, 48000, 'pavingAllDay@gmail.com');
INSERT INTO EMPLOYEE VALUES(NULL, 'Crazy', 'Al', 1001, 0, 'num1Volunteer@gmail.com');

CREATE OR REPLACE PROCEDURE SP_GIVE_RAISE
(DEP_ID INT, AVERAGE OUT INT, VALID_ID OUT SMALLINT)
IS
BEGIN
   -- SELECT * FROM EMPLOYEE;
        UPDATE 
        (SELECT *
         FROM EMPLOYEE
         INNER JOIN DEPARTMENT
         ON EMPLOYEE.DEPARTMENT_ID=DEPARTMENT.DEPARTMENT_ID
         WHERE EMPLOYEE.DEPARTMENT_ID = DEP_ID
        ) tmp
        SET tmp.SALARY = tmp.SALARY * 1.1;
        
        SELECT COUNT(EMPLOYEE_ID) INTO VALID_ID FROM EMPLOYEE
         INNER JOIN DEPARTMENT
         ON EMPLOYEE.DEPARTMENT_ID=DEPARTMENT.DEPARTMENT_ID
         WHERE EMPLOYEE.DEPARTMENT_ID = DEP_ID;
        
        SELECT AVG(SALARY) INTO AVERAGE
         FROM EMPLOYEE
         INNER JOIN DEPARTMENT
         ON EMPLOYEE.DEPARTMENT_ID=DEPARTMENT.DEPARTMENT_ID
         WHERE EMPLOYEE.DEPARTMENT_ID = DEP_ID;
END;
/

CREATE OR REPLACE PROCEDURE GET_DEP_AVG_SAL
(DEP_ID INT, AVERAGE OUT INT) 
IS
BEGIN
 SELECT AVG(SALARY) INTO AVERAGE
             FROM EMPLOYEE
             INNER JOIN DEPARTMENT
             ON EMPLOYEE.DEPARTMENT_ID=DEPARTMENT.DEPARTMENT_ID
             WHERE EMPLOYEE.DEPARTMENT_ID = DEP_ID;
END;
/