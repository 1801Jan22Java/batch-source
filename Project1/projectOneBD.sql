DROP TABLE REIMBURSEMENT;
DROP TABLE EMPLOYEE;
DROP TABLE EMPLOYEEINFO;
DROP TABLE MANAGER;
DROP SEQUENCE EMP_SEQ;
DROP SEQUENCE EMP_INFO_SEQ;
DROP SEQUENCE MAN_SEQ;
DROP SEQUENCE REIM_SEQ;

/****************************************************
    Create Tables
****************************************************/

CREATE TABLE Employee 
(
    EMPLOYEE_ID INTEGER NOT NULL,
    USERNAME VARCHAR2(30) NOT NULL UNIQUE,
    PASSWORD VARCHAR2(30) NOT NULL,
    EMPLOYEE_INFO_ID INTEGER NOT NULL
);

CREATE TABLE EmployeeInfo
(
    EMPLOYEE_INFO_ID INTEGER NOT NULL,
    EMAIL VARCHAR2(40) NOT NULL,
    FIRSTNAME VARCHAR2(40) NOT NULL,
    LASTNAME VARCHAR2(40) NOT NULL,
    ADDRESS VARCHAR2(40)
);

CREATE TABLE Manager
(
    MANAGER_ID INTEGER NOT NULL,
    USERNAME VARCHAR2(30) NOT NULL UNIQUE,
    PASSWORD VARCHAR2(30) NOT NULL
);

CREATE TABLE Reimbursement
(
    REIMBURSEMENT_ID INTEGER NOT NULL,
    EMPLOYEE_ID INTEGER NOT NULL,
    MANAGER_ID INTEGER,
    STATUS INTEGER
--    IMAGE ?????????????????
);

/****************************************************
    Create Primary Keys
****************************************************/

ALTER TABLE Employee ADD CONSTRAINT PK_EMP_ID
PRIMARY KEY (EMPLOYEE_ID);

ALTER TABLE EmployeeInfo ADD CONSTRAINT PK_EMP_INFO_ID
PRIMARY KEY (EMPLOYEE_INFO_ID);

ALTER TABLE Manager ADD CONSTRAINT PK_MAN_ID
PRIMARY KEY (MANAGER_ID);

ALTER TABLE Reimbursement ADD CONSTRAINT PK_REIM_ID
PRIMARY KEY (REIMBURSEMENT_ID);

/****************************************************
    Create Foreign Keys
****************************************************/

ALTER TABLE Employee ADD CONSTRAINT FK_EMP_INF_ID
FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID);

ALTER TABLE Reimbursement ADD CONSTRAINT FK_MAN_ID
FOREIGN KEY (MANAGER_ID) REFERENCES MANAGER (MANAGER_ID);

ALTER TABLE Reimbursement ADD CONSTRAINT FK_EMP_ID
FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID);

/****************************************************
    Create Constraints
****************************************************/

ALTER TABLE Reimbursement ADD CONSTRAINT CK_STATUS
CHECK (STATUS >= 0 AND STATUS < 3);

/****************************************************
    Create Triggers & Sequences
****************************************************/

CREATE SEQUENCE EMP_SEQ
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE SEQUENCE EMP_INFO_SEQ
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE SEQUENCE MAN_SEQ
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE SEQUENCE REIM_SEQ
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

CREATE OR REPLACE TRIGGER NEW_EMPLOYEE
BEFORE INSERT ON Employee
FOR EACH ROW
BEGIN
SELECT EMP_SEQ.NEXTVAL
INTO :new.EMPLOYEE_ID
FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER NEW_EMPLOYEE_INFO
BEFORE INSERT ON EmployeeInfo
FOR EACH ROW
BEGIN
SELECT EMP_INFO_SEQ.NEXTVAL
INTO :new.EMPLOYEE_INFO_ID
FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER NEW_MANAGER
BEFORE INSERT ON Manager
FOR EACH ROW
BEGIN
SELECT MAN_SEQ.NEXTVAL
INTO :new.MANAGER_ID
FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER NEW_REIMBURSEMENT
BEFORE INSERT ON Reimbursement
FOR EACH ROW
BEGIN
SELECT REIM_SEQ.NEXTVAL
INTO :new.REIMBURSEMENT_ID
FROM DUAL;
END;
/

/****************************************************
    Create Stored Procedure
****************************************************/



