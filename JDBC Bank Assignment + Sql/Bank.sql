CREATE TABLE MEMBERS (
    MEMBERID NUMBER PRIMARY KEY,
    FIRSTNAME varchar(255) NOT NULL,
    LASTNAME varchar(255) NOT NULL,
    USERNAME varchar(255) NOT NULL,
    BALANCE NUMBER,
    PWORD varchar(255) NOT NULL
);



SELECT * FROM MEMBERS;
--DROP TABLE MEMBERS;


INSERT INTO MEMBERS(FIRSTNAME, LASTNAME, USERNAME, PWORD)
VALUES ('Hank', 'Hill', 'Hilly123', 'password');

INSERT INTO MEMBERS(FIRSTNAME, LASTNAME, USERNAME, PWORD, BALANCE)
VALUES ('Jeff', 'Boomhauer', 'Boom1995', 'password123', 0);

INSERT INTO MEMBERS(FIRSTNAME, LASTNAME, USERNAME, PWORD, BALANCE)
VALUES ('John', 'Johnson', 'john0', 'password456', 0);

SELECT * FROM MEMBERS;

CREATE TABLE MEMBERS_ACCOUNT (
    ACCOUNTID NUMBER PRIMARY KEY,
    MEMBERID NUMBER,
    BALANCE NUMBER
);

SELECT* FROM MEMBERS_ACCOUNT;



INSERT INTO MEMBERS_ACCOUNT(MEMBERID,BALANCE)
VALUES (188, 1111);

INSERT INTO MEMBERS_ACCOUNT( MEMBERID,BALANCE)
VALUES (2,121.23);

INSERT INTO MEMBERS_ACCOUNT( MEMBERID,BALANCE)
VALUES (3,50);

-- CONSTRAINT
ALTER TABLE MEMBERS_ACCOUNT
ADD CONSTRAINT FK_MEMBER_ACCOUNT
FOREIGN KEY (MEMBERID) REFERENCES MEMBERS(MEMBERID);

CREATE OR REPLACE PROCEDURE CREATE_ACCOUNT
( MEM_ID MEMBER_ACC.MEMBERID%TYPE, COMPANY_NAME OUT CUSTOMER.COMPANY%TYPE,FIRST_NAME OUT CUSTOMER.FIRSTNAME%TYPE, LAST_NAME OUT CUSTOMER.LASTNAME%TYPE)
AS
BEGIN
INSERT INTO MEMBER_ACC(MEMBERID, FIRSTNAME, LASTNAME, USERNAME, PWORD, BALANCE)  VALUES  (MEM_ID, FNAME, LNAME, UNAME, PASS_WORD, BAL);
END;
/



CREATE OR REPLACE PROCEDURE WITHDRAW_DEPOSIT
(TRANS_AMOUNT NUMBER)
AS BEGIN
UPDATE MEMBER_ACC SET BALANCE = BALANCE + TRANS_AMOUNT WHERE MEMBERID = MEM_ID ;
END;

-- SEQUENCES

CREATE SEQUENCE MEMBERID_SEQUENCE
START WITH 13  
INCREMENT BY 1 ;  

CREATE SEQUENCE ACCOUNTID_SEQUENCE
START WITH 10  
INCREMENT BY 10 ;  

CREATE SEQUENCE MEMBERID_SEQUENCE2
START WITH 13  
INCREMENT BY 1 ; 


-- TRIGGERS

CREATE OR REPLACE TRIGGER MEMBERID_TRIGGER
BEFORE INSERT ON MEMBERS
FOR EACH ROW
BEGIN
  SELECT MEMBERID_SEQUENCE.NEXTVAL 
  INTO :NEW.MEMBERID FROM DUAL;
END;

CREATE OR REPLACE TRIGGER ACCOUNT_TRIGGER
BEFORE INSERT ON MEMBERS_ACCOUNT
FOR EACH ROW
BEGIN
  SELECT ACCOUNTID_SEQUENCE.NEXTVAL 
  INTO :NEW.ACCOUNTID FROM DUAL;
END;


