CREATE TABLE WALMART_EMPLOYEE (
    EMPLOYEE_ID NUMBER,
    EMP_FIRSTNAME VARCHAR(50),
    EMP_LASTNAME VARCHAR(50),
    DEPARTMENT_ID NUMBER,
    SALARY NUMBER,
    EMP_EMAIL VARCHAR(50),
    CONSTRAINT PK_EMPLOYEE_ID PRIMARY KEY (EMPLOYEE_ID)
);

CREATE TABLE DEPARTMENT (
    DEPARTMENT_ID NUMBER,
    DEPARTMENT_NAME VARCHAR(50),
    CONSTRAINT PK_DEPARTMENT_ID PRIMARY KEY (DEPARTMENT_ID)
);

--FOREIGN KEY

ALTER TABLE WALMART_EMPLOYEE
ADD CONSTRAINT FK_EMPLOYEE_DEPARTMENT_ID
FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT(DEPARTMENT_ID);


--SEQUENCES

CREATE SEQUENCE SEQ_EMPLOYEE_ID_PK
MINVALUE 0
START WITH 0
INCREMENT BY 1;

CREATE SEQUENCE SEQ_DEPARTMENT_ID_PK
MINVALUE 0
START WITH 0
INCREMENT BY 1;


--TRIGGERS

/*
DROP TRIGGER EMPLOYEE_ID_PK_TRIGGER;
DROP TRIGGER DEPARTMENT_ID_PK_TRIG;

CREATE OR REPLACE TRIGGER EMPLOYEE_ID_PK_TRIGGER
AFTER INSERT ON WALMART_EMPLOYEE
FOR EACH ROW
BEGIN
    UPDATE WALMART_EMPLOYEE SET EMPLOYEE_ID = SEQ_EMPLOYEE_ID_PK.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER DEPARTMENT_ID_PK_TRIG
AFTER INSERT ON DEPARTMENT
FOR EACH ROW
BEGIN
    UPDATE DEPARTMENT SET DEPARTMENT_ID = SEQ_DEPARTMENT_ID_PK.NEXTVAL;
END;
/
*/


--INSERT THREE DEPARTMENTS

INSERT INTO DEPARTMENT VALUES (SEQ_DEPARTMENT_ID_PK.NEXTVAL,'ELECTRONICS');
INSERT INTO DEPARTMENT VALUES (SEQ_DEPARTMENT_ID_PK.NEXTVAL,'CLOTHING');
INSERT INTO DEPARTMENT VALUES (SEQ_DEPARTMENT_ID_PK.NEXTVAL,'APPLIANCES');

--INSERT SIX EMPLOYEES
INSERT INTO WALMART_EMPLOYEE VALUES (SEQ_EMPLOYEE_ID_PK.NEXTVAL,'Kermit', 'Frog', 2, 40000, 'Kermit@Walmart.com');
INSERT INTO WALMART_EMPLOYEE VALUES (SEQ_EMPLOYEE_ID_PK.NEXTVAL,'Miss', 'Piggy', 2, 50000, 'Piggy@Walmart.com');
INSERT INTO WALMART_EMPLOYEE VALUES (SEQ_EMPLOYEE_ID_PK.NEXTVAL,'Fozzie', 'Bear', 3, 60000, 'Bear@Walmart.com');
INSERT INTO WALMART_EMPLOYEE VALUES (SEQ_EMPLOYEE_ID_PK.NEXTVAL,'Big', 'Bird', 4, 70000, 'Bird@Walmart.com');
INSERT INTO WALMART_EMPLOYEE VALUES (SEQ_EMPLOYEE_ID_PK.NEXTVAL,'Count', 'Dracula', 3, 80000, 'Dracula@Walmart.com');
INSERT INTO WALMART_EMPLOYEE VALUES (SEQ_EMPLOYEE_ID_PK.NEXTVAL,'Grover', '???', 4, 90000, 'Grover@Walmart.com');

CREATE OR REPLACE PROCEDURE SP_GIVE_RAISE (THE_DEPARTMENT_ID IN NUMBER, AVG_SALARY OUT NUMBER, VALID OUT INTEGER)
AS
    THE_AVERAGE_SALARY NUMBER;
BEGIN
    FOR i IN (SELECT * FROM WALMART_EMPLOYEE WHERE DEPARTMENT_ID=THE_DEPARTMENT_ID) LOOP
        UPDATE WALMART_EMPLOYEE SET SALARY=(SALARY*1.10) WHERE EMPLOYEE_ID=i.EMPLOYEE_ID;
        VALID := 1;     --IS A VALID DEPARTMENT ID
    END LOOP;
    SELECT AVG(SALARY) INTO AVG_SALARY FROM WALMART_EMPLOYEE WHERE DEPARTMENT_ID=THE_DEPARTMENT_ID;
END;
/


